#monitor
port 5502

#
# First there's a block of variable declarations. There
# should be one of these for each key which appears in the
# data stream, except for "time".

# These are separated by commas.

var {
    # Currently only float values are supported - we can emulate
    # others with these.
    
    # "a" is a variable with range -1 to 1. We'll store 100 values
    # for it in a cyclic buffer, so we can graph 100 values back.
    
    float alt 100 range 0 to 10000
    float asp 100 range 0 to 40
    float roll 100 range -180 to 180
    float pitch 100 range -180 to 180
    float hdg 100 range 0 to 359
    float wpdist 100 range 0 to 50000
    float wpnum 100 range 0 to 100
    float wpalt 100 range 0 to 10000
    float wphdg 100 range 0 to 359
    float wplat 100 range -90 to 90
    float wplon 100 range -180 to 180
    float hdgerr 100 range -180 to 180
    float thr 100 range 0 to 100
    float xte 100 range -5000 to 5000
    float ele 100 range -90 to 90
    float ali 100 range -90 to 90
    float pool0 100 range 0 to 10000
    float pool1 100 range 0 to 300000
    float batt 100 range 0 to 100
    float fuelcell_pwr 100 range 0 to 900
    #float odop 100 range 0 to 100
    

    # Similarly, "b" is a 100-long buffer which takes values from -1
    # to 1.

    #float speed 10000 range 0 to 10
    
    # "lat" and "lon" should always be considered to be a pair,
    # so we link them - if a lat ever arrives without a lon, a
    # lon will be created at the same time with the same value
    # it had previously.
    # Lat has range -90 to 90, lon has range -180 to 180
    # Being linked, they have the same buffer size - 1000 values.
    
    linked (
    float lat range -90 to 90,
    float lon range -180 to 180) 1000
}
    
# That's the variables, now we can define the widgets.

# the only display (currently)
window inverse {
    
    # top left
    frame 0,0,20,1 {
        map 0,0 {
            point {
                # For this point renderer,
                # we render points at lat,lon, with a new point
                # every time we get a new lat. Note that lat comes first.
                
                location var lat,var lon on var lat
            
                # we also render 40 of the previous points when new "lat" data arrived.
            
                trail 40000

                # var a's range is mapped onto the entire hue range, in which 0 is red
                # and 1 is back to red again; so a=-1 will be red as will a=1. If you
                # wanted to do something cleverer, you could use an expression.
            
                hue var alt
            
                # we map variable b's range (-1 to 1) onto the size range 2-20 pixels
                # to determine the size of the circle drawn.
            
                #sizerange 3 20 var temp
            }
            
            point {
        	location var wplat,var wplon on var wplat
        	trail 1
    	    }

            vector {
                # we also draw a vector at each point - the same points.            
                location var lat, var lon on var lat
            
                trail 1
            
                # the width of the vector is set to 3 pixels
                width 3
            
                # the direction of the vector comes from the expression a*180.
                degrees var hdg
            
                # and the vector is black (default is white, for technical reasons)
                colour black
            }
        }
    }

    frame 20,0,20,1 { # top right

        gauge 0,0 { var asp title "Air Speed" subtitle "m/s" fontscale 2}
        gauge 1,0 { var alt title "Altitude" subtitle "Metres" fontscale 2}
        gauge 2,0 { var thr title "Throttle" subtitle "percent" fontscale 2}

        gauge 0,1 { var roll title "Roll" subtitle "degrees" fontscale 2}
        gauge 1,1 { var pitch title "Pitch" subtitle "degrees" fontscale 2}
        gauge 2,1 {var batt title "Battery Remaining" subtitle "Percent" fontscale 2}

        number 0,2 { var wpnum title "Waypoint Number"}
        number 1,2 { var wpdist title "Waypoint Distance"}
        number 2,2 { var wpalt title "Waypoint Altitude"}
        
        compass 1,3 {
            title "waypoint heading"
            expr "wphdg" range auto
        }        
        
        compass 0,3 {
            title "heading"
            expr "hdg" range auto
        }        

        
        number 2,3 { var hdgerr title "Heading Error"}
        
        #gauge 2,2 { var odop title "Dissolved Oxygen" subtitle "%" fontscale 2}
        
        number 0,4 { var pool0 title "Pool 0" }
        number 1,4 { var pool1 title "Pool 1" }
    
    } 
    

    # bottom frame, 2 cols wide

    frame 0,1,40,1 {
        graph 0,0 {
            time 300
            #var asp { col red width 2}
            #var alt { col yellow width 2}
            #var tds { col green width 2}
            var pool0 { col blue width 2}
            var pool1 { col pink width 2}
            #var wpdist { col white width 2}
            #var odop { col grey width 2}
        }
    }
}
